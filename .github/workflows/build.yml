name: Build and Artifact the ESP-IDF Project

on:
  push:
    branches: [ main ]
    paths:
      - 'main/**'
      - 'CMakeLists.txt'
      - 'sdkconfig.defaults'
      - '.github/workflows/**'
      - '.github/scripts/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'main/**'
      - 'CMakeLists.txt'
      - 'sdkconfig.defaults'
      - '.github/workflows/**'
      - '.github/scripts/**'

permissions:
  contents: write
  actions: read

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.changes.outputs.should_build }}
    steps:
      - name: Check if build is needed
        id: changes
        run: |
          echo "should_build=true" >> $GITHUB_OUTPUT
          echo "‚úÖ Build files changed - proceeding with build"

  build:
    needs: check
    if: needs.check.outputs.should_build == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # - name: Clean build_data branch
      #   run: |
      #     chmod +x .github/scripts/clean_build_data_branch.sh
      #     .github/scripts/clean_build_data_branch.sh
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ESP-IDF Build
        uses: espressif/esp-idf-ci-action@v1
        with:
          esp_idf_version: v5.4.1
          target: esp32c6
          path: '.'

      - name: Extract binary sizes
        id: sizes
        run: |
          chmod +x .github/scripts/extract_sizes.sh
          .github/scripts/extract_sizes.sh
          echo "CURRENT_TOTAL_SIZE=${TOTAL_SIZE}" >> $GITHUB_ENV
          echo "CURRENT_GIT_COMMIT=${GIT_COMMIT}" >> $GITHUB_ENV

      - name: Update build data (clean branch)
        run: |
          chmod +x .github/scripts/update_build_data.sh
          .github/scripts/update_build_data.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify build_data branch integrity
        run: |
          # Switch to build_data branch and verify only allowed files exist
          git stash
          git fetch origin build_data:build_data 2>/dev/null || echo "build_data branch will be created"
          if git show-ref --verify --quiet refs/heads/build_data; then
            git checkout build_data
            
            echo "üîç Verifying build_data branch contains only authorized files..."
            ALL_FILES=($(git ls-files))
            ALLOWED_FILES=("README.md" "build_data.csv")
            
            unauthorized_found=false
            for file in "${ALL_FILES[@]}"; do
              file_allowed=false
              for allowed in "${ALLOWED_FILES[@]}"; do
                if [ "$file" == "$allowed" ]; then
                  file_allowed=true
                  break
                fi
              done
              
              if [ "$file_allowed" == false ]; then
                echo "‚ùå Unauthorized file found: $file"
                unauthorized_found=true
              else
                echo "‚úÖ Authorized file: $file"
              fi
            done
            
            if [ "$unauthorized_found" == true ]; then
              echo "‚ùå Build data branch contains unauthorized files!"
              exit 1
            else
              echo "‚úÖ Build data branch is clean - contains only README.md and build_data.csv"
            fi
            
            git checkout main
          fi

      - name: Archive ESP32 binaries (Size Changed)
        if: env.SIZES_CHANGED == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: esp32-binaries-${{ env.CURRENT_GIT_COMMIT }}-${{ env.CURRENT_TOTAL_SIZE }}B-size-changed
          path: |
            build/bootloader/bootloader.bin
            build/partition_table/partition-table.bin
            build/*.bin
          retention-days: 30
          compression-level: 6

      - name: Archive ESP32 binaries (Manual Dispatch)
        if: github.event_name == 'workflow_dispatch' && env.SIZES_CHANGED != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: esp32-binaries-${{ env.CURRENT_GIT_COMMIT }}-${{ env.CURRENT_TOTAL_SIZE }}B-manual
          path: |
            build/bootloader/bootloader.bin
            build/partition_table/partition-table.bin
            build/*.bin
          retention-days: 30
          compression-level: 6

      - name: Verify upload completion
        if: env.SIZES_CHANGED == 'true'
        run: |
          echo "‚úÖ Artifact upload completed successfully for size change"
          echo "üì¶ Artifact name: esp32-binaries-${{ env.CURRENT_GIT_COMMIT }}-${{ env.CURRENT_TOTAL_SIZE }}B-size-changed"
          echo "üìè Total size: ${{ env.CURRENT_TOTAL_SIZE }} bytes"

      - name: Create build summary
        run: |
          chmod +x .github/scripts/create_summary.sh
          .github/scripts/create_summary.sh
